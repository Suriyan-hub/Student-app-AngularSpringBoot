package com.project.demo.rest;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.project.demo.model.Student;
import com.project.demo.service.StudentService;

@RestController
@RequestMapping("/student")
@CrossOrigin(origins="http://localhost:4200/")
public class StudentRestController {

	@Autowired
	private StudentService service;
	//1.save
	
	@PostMapping("/create")
	public ResponseEntity<String> saveStudent(@RequestBody Student student){
		
		int id=service.saveStudent(student);
		String msg="Student saved with id:"+id ;
		return ResponseEntity.ok(msg);
		
	}

	//2.fetch all
	@GetMapping("/all")
	public ResponseEntity<List<Student>> getAllStudents(){
		
		List<Student> list = service.getAllStudents();
		return ResponseEntity.ok(list);
	}
	//3.fetch
	@GetMapping("/one/{id}")
	public ResponseEntity<Student> getOneStudent(@PathVariable int id){
		Student std = service.getOneStudent(id);
		return ResponseEntity.ok(std);
		
	}
	//4.delete
	@DeleteMapping("/remove/{id}")
	public ResponseEntity<String> deleteStudent(@PathVariable int id){
		service.deleteStudent(id);
		String msg="Student deleted with id:" +id;
		return ResponseEntity.ok(msg);
		
	}
	//5.update
	@PutMapping("/update")
	public ResponseEntity<String> updateStudent(@RequestBody Student student ){
		
		service.updateStudent(student);
		String msg="Student Updated:" +student.getSid();
		return ResponseEntity.ok(msg);
		
	}
	
}
